{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///CSV.min.js","webpack:///webpack/bootstrap 27ddf7b5486c38616bed","webpack:///./src/csv.js","webpack:///./src/parseCSV.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_parseCSV","CSV","parseCSV","apply","undefined","arguments","input","separator","quote","char","nextChar","result","rowIndex","columnIndex","inputLength","quoteField"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,SAAAH,GACA,gBAAAC,SACAA,QAAA,IAAAD,IAEAD,EAAA,IAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/BL,EAAOD,QAAUM,EAAoB,IAKhC,SAASL,EAAQD,EAASM,GAE/B,YAUA,SAASS,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCARhHC,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MErEjiBmB,EAAA9B,EAAA,GAEqB+B,EFyEV,WEvEP,QAAAA,KAActB,EAAAX,KAAAiC,GFmFb,MAPAf,GAAae,EAAK,OACdL,IAAK,QACLX,MAAO,WE3ER,MAAOe,GAAAE,SAAAC,MAAAC,OAAAC,eFgFHJ,IAGXrC,cExFoBqC,EFyFpBpC,EAAOD,QAAUA,EAAQ,YAIpB,SAASC,EAAQD,GAEtB,YGvFM,SAASsC,GAASI,EAAOC,EAAWC,GACvC,GAGIC,GAAMC,EAGNpB,EANAqB,IACK,KAGLC,EAAW,EACXC,EAAc,EAEdC,EAAcR,EAAMf,OACpBwB,GAAa,CAKjB,KAHAR,EAAYA,GAAa,IACzBC,EAAQA,GAAS,IAEZlB,EAAI,EAAOwB,EAAJxB,EAAiBA,IACzBmB,EAAOH,EAAMhB,GACboB,EAAWJ,EAAMhB,EAAI,GAEjBmB,IAASD,GAAUO,EAKnBN,IAASD,GAASO,GAAcL,IAAaF,GAC7CG,EAAOC,GAAUC,IAAgBL,EACjClB,KAIAmB,IAASD,IAASO,GACjBL,IAAaH,GAA0B,OAAbG,GAAsBA,EAKxC,OAATD,GAAkBM,EAQlBN,IAASF,GAAcQ,EAM3BJ,EAAOC,GAAUC,IAAgBJ,GAL7BI,IACAF,EAAOC,GAAUC,GAAe,KAThCD,IACAC,EAAc,EACdF,EAAOC,MACPD,EAAOC,GAAUC,GAAe,IARhCE,GAAa,EAZbA,GAAa,CAiCrB,OAAOJ,GHqCV5B,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,IAEXrB,EG5FesC","file":"CSV.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CSV\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CSV\"] = factory();\n\telse\n\t\troot[\"CSV\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CSV\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CSV\"] = factory();\n\telse\n\t\troot[\"CSV\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _parseCSV = __webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CSV = function () {\n\t    function CSV() {\n\t        _classCallCheck(this, CSV);\n\t    }\n\t\n\t    _createClass(CSV, null, [{\n\t        key: 'parse',\n\t        value: function parse() {\n\t            return _parseCSV.parseCSV.apply(undefined, arguments);\n\t        }\n\t    }]);\n\t\n\t    return CSV;\n\t}();\n\t\n\texports.default = CSV;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.parseCSV = parseCSV;\n\t/**\r\n\t * CSV Parser.  Takes a string as input and returns\r\n\t * an array of arrays (for each row).\r\n\t *\r\n\t * @param input String, CSV input\r\n\t * @param separator String, single character used to separate fields.\r\n\t *        Defaults to \",\"\r\n\t * @param quote String, single character used to quote non-simple fields.\r\n\t *        Defaults to \"\\\"\".\r\n\t */\n\tfunction parseCSV(input, separator, quote) {\n\t    var result = [['']],\n\t        char,\n\t        nextChar,\n\t        rowIndex = 0,\n\t        columnIndex = 0,\n\t        i,\n\t        inputLength = input.length,\n\t        quoteField = false;\n\t\n\t    separator = separator || ',';\n\t    quote = quote || '\"';\n\t\n\t    for (i = 0; i < inputLength; i++) {\n\t        char = input[i];\n\t        nextChar = input[i + 1];\n\t\n\t        if (char === quote && !quoteField) {\n\t            quoteField = true;\n\t            continue;\n\t        }\n\t\n\t        if (char === quote && quoteField && nextChar === quote) {\n\t            result[rowIndex][columnIndex] += quote;\n\t            i++;\n\t            continue;\n\t        }\n\t\n\t        if (char === quote && quoteField && (nextChar === separator || nextChar === '\\n' || !nextChar)) {\n\t            quoteField = false;\n\t            continue;\n\t        }\n\t\n\t        if (char === '\\n' && !quoteField) {\n\t            rowIndex++;\n\t            columnIndex = 0;\n\t            result[rowIndex] = [];\n\t            result[rowIndex][columnIndex] = '';\n\t            continue;\n\t        }\n\t\n\t        if (char === separator && !quoteField) {\n\t            columnIndex++;\n\t            result[rowIndex][columnIndex] = '';\n\t            continue;\n\t        }\n\t\n\t        result[rowIndex][columnIndex] += char;\n\t    }\n\t\n\t    return result;\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** CSV.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 27ddf7b5486c38616bed\n **/","import { parseCSV } from './parseCSV';\r\n\r\nexport default class CSV {\r\n\r\n    constructor() {}\r\n\r\n    static parse(...params) {\r\n        return parseCSV(...params);\r\n    }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/csv.js\n **/","/**\r\n * CSV Parser.  Takes a string as input and returns\r\n * an array of arrays (for each row).\r\n *\r\n * @param input String, CSV input\r\n * @param separator String, single character used to separate fields.\r\n *        Defaults to \",\"\r\n * @param quote String, single character used to quote non-simple fields.\r\n *        Defaults to \"\\\"\".\r\n */\r\nexport function parseCSV(input, separator, quote) {\r\n    var result = [\r\n            ['']\r\n        ],\r\n        char, nextChar,\r\n        rowIndex = 0,\r\n        columnIndex = 0,\r\n        i,\r\n        inputLength = input.length,\r\n        quoteField = false;\r\n\r\n    separator = separator || ',';\r\n    quote = quote || '\"';\r\n\r\n    for (i = 0; i < inputLength; i++) {\r\n        char = input[i];\r\n        nextChar = input[i + 1];\r\n\r\n        if (char === quote && !quoteField) {\r\n            quoteField = true;\r\n            continue;\r\n        }\r\n\r\n        if (char === quote && quoteField && nextChar === quote) {\r\n            result[rowIndex][columnIndex] += quote;\r\n            i++;\r\n            continue;\r\n        }\r\n\r\n        if (char === quote && quoteField &&\r\n            (nextChar === separator || nextChar === '\\n' || !nextChar)) {\r\n            quoteField = false;\r\n            continue;\r\n        }\r\n\r\n        if (char === '\\n' && !quoteField) {\r\n            rowIndex++;\r\n            columnIndex = 0;\r\n            result[rowIndex] = [];\r\n            result[rowIndex][columnIndex] = '';\r\n            continue;\r\n        }\r\n\r\n        if (char === separator && !quoteField) {\r\n            columnIndex++;\r\n            result[rowIndex][columnIndex] = '';\r\n            continue;\r\n        }\r\n\r\n        result[rowIndex][columnIndex] += char;\r\n    }\r\n\r\n    return result;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/parseCSV.js\n **/"],"sourceRoot":""}